import React from "react";
import "./Solutions.css";

export const Solutions = () => {
    return (
        <>
            <div>
                Solution One: <span className="Solutions">{solutionOne()}</span>
            </div>
            <div>
                Solution Two: <span className="Solutions">{solutionTwo()}</span>
            </div>
        </>
    );
};

// Problem 1
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.

const solutionOne = () => {
    const numberToUse = 1000;
    const numberSummer = (num: number) => {
        let multiples: number[] = [];
        for (let i = 0; i < num; i++) {
            if (i % 3 === 0 || i % 5 === 0) {
                multiples = [...multiples, i];
            }
        }
        return multiples.reduce((a, b) => a + b, 0);
    };
    return numberSummer(numberToUse);
};

// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

const solutionTwo = () => {
    const upperLimit = 4000000;
    let fibonacciArray = [1, 2];
    for (
        let i = 3;
        i <= upperLimit;
        i += fibonacciArray[fibonacciArray.length - 2]
    ) {
        fibonacciArray.push(i);
    }
    return fibonacciArray.reduce((a, b) => (b % 2 === 0 ? a + b : a + 0), 0);
};
